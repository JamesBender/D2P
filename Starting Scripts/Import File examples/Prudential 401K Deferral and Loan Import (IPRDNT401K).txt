/**********************************************************************************

IPRDNT401K: Prudential 401k Deferral and Loan Import

FormatCode:     IPRDNT401K
Project:        Prudential 401k Deferral and Loan Import
Client ID:      APO1003
Date/time:      2023-09-13 11:55:32.117
Ripout version: 7.4
Export Type:    Web
Status:         Production
Environment:    N23
Server:         N2D023DB01
Database:       ULTIPRO_APGRP
Web Filename:   APO1003_85CA0_EEHISTORY_IPRDNT401K_ExportCode_YYYYMMDD_HHMMSS.txt
ExportPath:    \\us.saas\n2\APO1003\APO1003\Imports\Prudential 401k\Reports\
ImportPath:    \\us.saas\n2\APO1003\APO1003\Imports\Prudential 401k\

**********************************************************************************/

SET NOCOUNT ON;

-----------
-- Drop the SavePath table if it exists
-----------

IF OBJECT_ID('U_IPRDNT401K_SavePath') IS NOT NULL DROP TABLE dbo.U_IPRDNT401K_SavePath


-----------
-- Create U_dsi_RipoutParms if it doesn't exist
-----------

IF OBJECT_ID('U_dsi_RipoutParms') IS NULL BEGIN

   CREATE TABLE dbo.U_dsi_RipoutParms (
   rpoFormatCode  VARCHAR(10)   NOT NULL,
   rpoParmType    VARCHAR(64)   NOT NULL,
   rpoParmValue01 VARCHAR(1024) NULL,
   rpoParmValue02 VARCHAR(1024) NULL,
   rpoParmValue03 VARCHAR(1024) NULL,
   rpoParmValue04 VARCHAR(1024) NULL,
   rpoParmValue05 VARCHAR(1024) NULL
)
END


-----------
-- Clear U_dsi_RipoutParms
-----------

DELETE FROM dbo.U_dsi_RipoutParms WHERE rpoFormatCode = 'IPRDNT401K'


-----------
-- Add paths to U_dsi_RipoutParms
-----------

INSERT INTO dbo.U_dsi_RipoutParms (rpoFormatCode, rpoParmType, rpoParmValue01, rpoParmValue02)
SELECT

FormatCode,
'Path',
CfgName,
CfgValue

FROM dbo.U_Dsi_Configuration
WHERE FormatCode = 'IPRDNT401K'
AND CfgName LIKE '%path%'


-----------
-- Add AscExp expSystemIDs to U_dsi_RipoutParms
-----------

INSERT INTO dbo.U_dsi_RipoutParms (rpoFormatCode, rpoParmType, rpoParmValue01, rpoParmValue02) 
SELECT

ExpFormatCode,
'expSystemID',
ExpExportCode,
ExpSystemID

FROM dbo.AscExp
WHERE ExpFormatCode = 'IPRDNT401K'


-----------
-- Delete configuration data
-----------

DELETE [dbo].[AscDefF] WHERE EXISTS (SELECT 1 FROM dbo.AscDefH WHERE AdfHeaderSystemID = AdhSystemID AND AdhFormatCode = 'IPRDNT401K')
DELETE FROM [dbo].[AscExp]                 WHERE ExpFormatCode = 'IPRDNT401K'
DELETE FROM [dbo].[AscImp]                 WHERE ImpFormatCode = 'IPRDNT401K'
DELETE FROM [dbo].[AscDefH]                WHERE AdhFormatCode = 'IPRDNT401K'
DELETE FROM [dbo].[U_dsi_Configuration]    WHERE FormatCode    = 'IPRDNT401K'
DELETE FROM [dbo].[U_dsi_SQLClauses]       WHERE FormatCode    = 'IPRDNT401K'
DELETE FROM [dbo].[U_dsi_RecordSetDetails] WHERE FormatCode    = 'IPRDNT401K'

IF OBJECT_ID('dbo.U_dsi_Translations')    IS NOT NULL DELETE FROM [dbo].[U_dsi_Translations]    WHERE FormatCode = 'IPRDNT401K'
IF OBJECT_ID('dbo.U_dsi_Translations_v2') IS NOT NULL DELETE FROM [dbo].[U_dsi_Translations_v2] WHERE FormatCode = 'IPRDNT401K'
IF OBJECT_ID('dbo.U_dsi_Translations_v3') IS NOT NULL DELETE FROM [dbo].[U_dsi_Translations_v3] WHERE FormatCode = 'IPRDNT401K'


-----------
-- Drop export-specific objects
-----------

IF OBJECT_ID('dsi_vwIPRDNT401K_Export') IS NOT NULL DROP VIEW [dbo].[dsi_vwIPRDNT401K_Export];
GO
IF OBJECT_ID('dsi_sp_BuildDriverTables_IPRDNT401K') IS NOT NULL DROP PROCEDURE [dbo].[dsi_sp_BuildDriverTables_IPRDNT401K];
GO
IF OBJECT_ID('U_IPRDNT401K_Raw') IS NOT NULL DROP TABLE [dbo].[U_IPRDNT401K_Raw];
GO
IF OBJECT_ID('U_IPRDNT401K_Import') IS NOT NULL DROP TABLE [dbo].[U_IPRDNT401K_Import];
GO
IF OBJECT_ID('U_IPRDNT401K_File') IS NOT NULL DROP TABLE [dbo].[U_IPRDNT401K_File];
GO
IF OBJECT_ID('U_IPRDNT401K_EEList') IS NOT NULL DROP TABLE [dbo].[U_IPRDNT401K_EEList];
GO
IF OBJECT_ID('U_IPRDNT401K_drvTbl') IS NOT NULL DROP TABLE [dbo].[U_IPRDNT401K_drvTbl];
GO

-----------
-- AscDefH inserts
-----------

INSERT INTO [dbo].[AscDefH] (AdhAccrCodesUsed,AdhAggregateAtLevel,AdhAuditStaticFields,AdhChildTable,AdhClientTableList,AdhCustomDLLFileName,AdhDedCodesUsed,AdhDelimiter,AdhEarnCodesUsed,AdhEEIdentifier,AdhEndOfRecord,AdhEngine,AdhFileFormat,AdhFormatCode,AdhFormatName,AdhFundCodesUsed,AdhImportExport,AdhInputFormName,AdhIsAuditFormat,AdhIsSQLExport,AdhModifyStamp,AdhOutputMediaType,AdhRecordSize,AdhSortBy,AdhSysFormat,AdhSystemID,AdhTaxCodesUsed,AdhYearStartFixedDate,AdhYearStartOption,AdhPreProcessSQL,AdhRespectZeroPayRate,AdhCreateTClockBatches,AdhThirdPartyPay) VALUES ('N',NULL,'Y','0',NULL,NULL,'N',NULL,'N','E','013010','BENEFITIMP','SDF','IPRDNT401K','Prudential 401k Deferral and Loan Import','N','I','FORM_ASCIIIMPORTBENEFITS','N','N',dbo.fn_GetTimedKey(),'D',NULL,'S','N','IPRDNT401KZ1','N',NULL,'N',NULL,'N',NULL,'N');
INSERT INTO [dbo].[AscDefH] (AdhAccrCodesUsed,AdhAggregateAtLevel,AdhAuditStaticFields,AdhChildTable,AdhClientTableList,AdhCustomDLLFileName,AdhDedCodesUsed,AdhDelimiter,AdhEarnCodesUsed,AdhEEIdentifier,AdhEndOfRecord,AdhEngine,AdhFileFormat,AdhFormatCode,AdhFormatName,AdhFundCodesUsed,AdhImportExport,AdhInputFormName,AdhIsAuditFormat,AdhIsSQLExport,AdhModifyStamp,AdhOutputMediaType,AdhRecordSize,AdhSortBy,AdhSysFormat,AdhSystemID,AdhTaxCodesUsed,AdhYearStartFixedDate,AdhYearStartOption,AdhPreProcessSQL,AdhRespectZeroPayRate,AdhCreateTClockBatches,AdhThirdPartyPay) VALUES ('N','C','Y','0','','','N','','N','','013010','EMPEXPORT','CDE','IPRDNT401K','Prudential 401k Deferral and Loan Import','N','E','FORM_EMPEXPORT','N','C',dbo.fn_GetTimedKey(),'D','2000','S','N','IPRDNT401KZ0','N','Jan  1 1900 12:00AM','C','dbo.dsi_sp_Switchbox_v2','N',NULL,'N');

-----------
-- AscDefF inserts
-----------

INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('1','IPRDNT401KZ0','50','H','01','1',NULL,'Employee Number',NULL,NULL,'"Employee Number"','(''DA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('2','IPRDNT401KZ0','50','H','01','2',NULL,'Employee Name',NULL,NULL,'"Employee Name"','(''DA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('3','IPRDNT401KZ0','50','H','01','3',NULL,'Deduction Code',NULL,NULL,'"Deduction Code"','(''DA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('4','IPRDNT401KZ0','50','H','01','4',NULL,'Contribution Percent',NULL,NULL,'"Contribution Percent"','(''DA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('5','IPRDNT401KZ0','50','H','01','5',NULL,'Contribution Amount',NULL,NULL,'"Contribution Amount "','(''DA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('6','IPRDNT401KZ0','50','H','01','6',NULL,'Loan Payment Amount',NULL,NULL,'"Loan Payment Amount"','(''DA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('7','IPRDNT401KZ0','50','H','01','7',NULL,'Loan Goal Amount',NULL,NULL,'"Loan Goal Amount"','(''DA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('8','IPRDNT401KZ0','50','H','01','8',NULL,'Loan Type',NULL,NULL,'"Loan Type"','(''DA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('9','IPRDNT401KZ0','50','H','01','9',NULL,'Import Type',NULL,NULL,'"Import Type"','(''DA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('10','IPRDNT401KZ0','50','H','01','10',NULL,'Action',NULL,NULL,'"Action"','(''DA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('11','IPRDNT401KZ0','50','H','01','11',NULL,'Error Message',NULL,NULL,'"Error Message"','(''DA''=''T'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('1','IPRDNT401KZ0','50','D','10','1',NULL,'Employee Number',NULL,NULL,'"drvEmployeeNumber"','(''UA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('2','IPRDNT401KZ0','50','D','10','2',NULL,'Employee Name',NULL,NULL,'"drvEmployeeName"','(''UA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('3','IPRDNT401KZ0','50','D','10','3',NULL,'Deduction Code',NULL,NULL,'"drvDeductionCode"','(''UA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('4','IPRDNT401KZ0','50','D','10','4',NULL,'Contribution Percent',NULL,NULL,'"drvContributionPercent"','(''UA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('5','IPRDNT401KZ0','50','D','10','5',NULL,'Contribution Amount',NULL,NULL,'"drvContributionAmount"','(''UA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('6','IPRDNT401KZ0','50','D','10','6',NULL,'Loan Payment Amount',NULL,NULL,'"drvLoanPaymentAmount"','(''UA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('7','IPRDNT401KZ0','50','D','10','7',NULL,'Loan Goal Amount',NULL,NULL,'"drvLoanGoalAmount"','(''UA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('8','IPRDNT401KZ0','50','D','10','8',NULL,'Loan Type',NULL,NULL,'"drvLoanType"','(''UA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('9','IPRDNT401KZ0','50','D','10','9',NULL,'Import Type',NULL,NULL,'"drvImportType"','(''UA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('10','IPRDNT401KZ0','50','D','10','10',NULL,'Action',NULL,NULL,'"drvAction"','(''UA''=''T,'')');
INSERT INTO [dbo].[AscDefF] (AdfFieldNumber,AdfHeaderSystemID,AdfLen,AdfRecType,AdfSetNumber,AdfStartPos,AdfTableName,AdfTargetField,AdfVariableName,AdfVariableType,AdfExpression,AdfForCond) VALUES ('11','IPRDNT401KZ0','250','D','10','11',NULL,'Error',NULL,NULL,'"drvError"','(''UA''=''T'')');

-----------
-- Build web filename
-----------

/*01*/ DECLARE @COUNTRY char(2) = (SELECT CASE WHEN LEFT(@@SERVERNAME, 1) = 'T' THEN 'ca' ELSE 'us' END);
/*02*/ DECLARE @SERVER varchar(6) = (SELECT CASE WHEN LEFT(@@SERVERNAME, 3) IN ('WP1','WP2','WP3','WP4','WP5') THEN 'WP' WHEN LEFT(@@SERVERNAME, 2) IN ('NW','EW','WP') THEN LEFT(@@SERVERNAME, 3) ELSE LEFT(@@SERVERNAME, 2) END);
/*03*/ SET @SERVER = CASE WHEN LEFT(@@SERVERNAME, 2) IN ('NZ','EZ') THEN @SERVER + '\' + LEFT(@@SERVERNAME, 3) ELSE @SERVER END;
/*04*/ DECLARE @UDARNUM varchar(10) = (SELECT LTRIM(RTRIM(CmmContractNo)) FROM dbo.CompMast);
/*05*/ DECLARE @ENVIRONMENT varchar(7) = (SELECT CASE WHEN SUBSTRING(@@SERVERNAME,3,1) = 'D' THEN @UDARNUM WHEN SUBSTRING(@@SERVERNAME,4,1) = 'D' THEN LEFT(@@SERVERNAME,3) + 'Z' ELSE RTRIM(LEFT(@@SERVERNAME,PATINDEX('%[0-9]%',@@SERVERNAME)) + SUBSTRING(@@SERVERNAME,PATINDEX('%UP[0-9]%',@@SERVERNAME)+2,1)) END);
/*06*/ SET @ENVIRONMENT = CASE WHEN @ENVIRONMENT = 'EW21' THEN 'WP6' WHEN @ENVIRONMENT = 'EW22' THEN 'WP7' ELSE @ENVIRONMENT END;
/*07*/ DECLARE @COCODE varchar(5) = (SELECT RTRIM(CmmCompanyCode) FROM dbo.CompMast);
/*08*/ DECLARE @FileName varchar(1000) = 'IPRDNT401K_20230913.txt';
/*09*/ DECLARE @FilePath varchar(1000) = '\\' + @COUNTRY + '.saas\' + @SERVER + '\' + @ENVIRONMENT + '\Downloads\V10\Exports\' + @COCODE + '\EmployeeHistoryExport\';

-----------
-- AscExp inserts
-----------

INSERT INTO [dbo].[AscExp] (expAscFileName,expAsOfDate,expCOID,expCOIDAllCompanies,expCOIDList,expDateOrPerControl,expDateTimeRangeEnd,expDateTimeRangeStart,expDesc,expEndPerControl,expEngine,expExportCode,expExported,expFormatCode,expGLCodeTypes,expGLCodeTypesAll,expGroupBy,expLastEndPerControl,expLastPayDate,expLastPeriodEndDate,expLastStartPerControl,expNoOfRecords,expSelectByField,expSelectByList,expStartPerControl,expSystemID,expTaxCalcGroupID,expUser,expIEXSystemID) VALUES (RTRIM(@FilePath) + LTRIM(RTRIM(@FileName)),NULL,NULL,NULL,NULL,NULL,NULL,NULL,'401k Deferral & Loan Import','201701019','EMPEXPORT','IMPORT','Sep  8 2023  7:29AM','IPRDNT401K',NULL,NULL,NULL,'201701019','Jan  1 2017 12:00AM','Dec 30 1899 12:00AM','201701011','87','','','201701011',dbo.fn_GetTimedKey(),NULL,'usgmjohnson01',NULL);

-----------
-- AscImp inserts
-----------

INSERT INTO [dbo].[AscImp] (impCOID,impDateAccruedThru,impDateOfRollover,impDatePendingMoved,impDesc,impEEIdentifier,impEngine,impExceptions,impFormatCode,impImportCode,impImported,impPayPeriodID,impPosted,impReset,impSessionType,impSource,impSystemID,impUser,impValid,impVerified) VALUES ('',NULL,NULL,NULL,'Prudential 401k Deferral and L','E','BENEFITIMP','0','IPRDNT401K','IPRDNT401K',NULL,NULL,'Sep  8 2023  7:32AM','Sep  8 2023  7:33AM',NULL,'Do Not Import Here - Just VALIDATE / POST / RESET',dbo.fn_GetTimedKey(),'USGMKAPOOR','0','Sep  8 2023  7:31AM');

-----------
-- U_dsi_Configuration inserts
-----------

INSERT INTO [dbo].[U_dsi_Configuration] (FormatCode,CfgName,CfgType,CfgValue) VALUES ('IPRDNT401K','EEList','V','Y');
INSERT INTO [dbo].[U_dsi_Configuration] (FormatCode,CfgName,CfgType,CfgValue) VALUES ('IPRDNT401K','ExportPath','V','\\us.saas\n2\APO1003\APO1003\Imports\Prudential 401k\Reports\');
INSERT INTO [dbo].[U_dsi_Configuration] (FormatCode,CfgName,CfgType,CfgValue) VALUES ('IPRDNT401K','ImportPath','V','\\us.saas\n2\APO1003\APO1003\Imports\Prudential 401k\');
INSERT INTO [dbo].[U_dsi_Configuration] (FormatCode,CfgName,CfgType,CfgValue) VALUES ('IPRDNT401K','InitialSort','C','drvInitialSort');
INSERT INTO [dbo].[U_dsi_Configuration] (FormatCode,CfgName,CfgType,CfgValue) VALUES ('IPRDNT401K','NoEmpty','V','Y');
INSERT INTO [dbo].[U_dsi_Configuration] (FormatCode,CfgName,CfgType,CfgValue) VALUES ('IPRDNT401K','Testing','V','N');
INSERT INTO [dbo].[U_dsi_Configuration] (FormatCode,CfgName,CfgType,CfgValue) VALUES ('IPRDNT401K','UseFileName','V','Y');

-----------
-- U_dsi_RecordSetDetails inserts
-----------


-----------
-- U_dsi_SQLClauses inserts
-----------

INSERT INTO [dbo].[U_dsi_SQLClauses] (FormatCode,RecordSet,FromClause,WhereClause) VALUES ('IPRDNT401K','D10','dbo.U_IPRDNT401K_drvTbl WITH (NOLOCK)',NULL);

-----------
-- U_dsi_Translations inserts
-----------


-----------
-- U_dsi_Translations_v2 inserts
-----------


-----------
-- Create table U_IPRDNT401K_drvTbl
-----------

IF OBJECT_ID('U_IPRDNT401K_drvTbl') IS NULL
CREATE TABLE [dbo].[U_IPRDNT401K_drvTbl] (
    [drvSurrogateKey] varchar(50) NULL,
    [drvEmployeeNumber] varchar(50) NULL,
    [drvEmployeeName] varchar(50) NULL,
    [drvSSN] varchar(50) NULL,
    [drvDeductionCode] varchar(50) NULL,
    [drvBenefitStatus] varchar(50) NULL,
    [drvBenefitStatusDate] varchar(50) NULL,
    [drvBenefitStartDate] varchar(50) NULL,
    [drvBenefitStopDate] varchar(50) NULL,
    [drvDeductionStartDate] varchar(50) NULL,
    [drvDeductionStopDate] varchar(50) NULL,
    [drvContributionPercent] varchar(50) NULL,
    [drvContributionAmount] varchar(50) NULL,
    [drvEmployerPercent] varchar(50) NULL,
    [drvEmployerAmount] varchar(50) NULL,
    [drvBenefitOption] varchar(50) NULL,
    [drvBenefitAmount] varchar(50) NULL,
    [drvBenefitChangeReason] varchar(50) NULL,
    [drvLoanNumber] varchar(50) NULL,
    [drvLoanPaymentAmount] varchar(50) NULL,
    [drvLoanGoalAmount] varchar(50) NULL,
    [drvLoanType] varchar(50) NULL,
    [drvAction] varchar(50) NULL,
    [drvError] varchar(250) NULL,
    [drvImported] tinyint NOT NULL DEFAULT ((0)),
    [drvEEID] varchar(12) NULL,
    [drvCOID] varchar(5) NULL,
    [drvDedCode] varchar(50) NULL,
    [drvImportType] varchar(50) NULL,
    [drvPeriodStartDate] varchar(50) NULL,
    [drvPendingUpdateID] varchar(20) NULL,
    [drvInitialSort] varchar(50) NULL
);

-----------
-- Create table U_IPRDNT401K_EEList
-----------

IF OBJECT_ID('U_IPRDNT401K_EEList') IS NULL
CREATE TABLE [dbo].[U_IPRDNT401K_EEList] (
    [xCOID] char(5) NULL,
    [xEEID] char(12) NULL
);

-----------
-- Create table U_IPRDNT401K_File
-----------

IF OBJECT_ID('U_IPRDNT401K_File') IS NULL
CREATE TABLE [dbo].[U_IPRDNT401K_File] (
    [RecordSet] char(3) NOT NULL,
    [InitialSort] varchar(100) NOT NULL,
    [SubSort] varchar(100) NOT NULL,
    [SubSort2] varchar(100) NULL,
    [SubSort3] varchar(100) NULL,
    [Data] varchar(2000) NULL
);

-----------
-- Create table U_IPRDNT401K_Import
-----------

IF OBJECT_ID('U_IPRDNT401K_Import') IS NULL
CREATE TABLE [dbo].[U_IPRDNT401K_Import] (
    [EEID] varchar(12) NULL,
    [COID] varchar(5) NULL,
    [ImportType] varchar(50) NULL,
    [Field1] varchar(50) NULL,
    [Field2] varchar(50) NULL,
    [Field3] varchar(50) NULL,
    [Field4] varchar(50) NULL,
    [Field5] varchar(50) NULL,
    [Field6] varchar(50) NULL,
    [Field7] varchar(50) NULL,
    [Field8] varchar(50) NULL,
    [Field9] varchar(50) NULL,
    [Field10] varchar(50) NULL,
    [Field11] varchar(50) NULL,
    [Field12] varchar(50) NULL
);

-----------
-- Create table U_IPRDNT401K_Raw
-----------

IF OBJECT_ID('U_IPRDNT401K_Raw') IS NULL
CREATE TABLE [dbo].[U_IPRDNT401K_Raw] (
    [Data] varchar(8000) NULL
);
GO
CREATE PROCEDURE [dbo].[dsi_sp_BuildDriverTables_IPRDNT401K]
    @SystemID char(12)
AS
/**********************************************************************************
Client Name: Apollo Education Group, Inc.

Created By: Ryan Denzer-King
Business Analyst: Maribel Hernandez
Create Date: 05/24/2017
Service Request Number: SR-2017-00154601

Purpose: Prudential 401k Deferral and Loan Import

Revision History
----------------
Update By           Date        Request Num         Desc
Lynn Manning        11/14/2017    SR-2017-00162686    Add Source code J for ROTH

SELECT * FROM dbo.U_dsi_Configuration WHERE FormatCode = 'IPRDNT401K';
SELECT * FROM dbo.U_dsi_SqlClauses WHERE FormatCode = 'IPRDNT401K';
SELECT * FROM dbo.U_dsi_Parameters WHERE FormatCode = 'IPRDNT401K';
SELECT * FROM dbo.AscExp WHERE ExpFormatCode = 'IPRDNT401K';

UPDATE AscExp SET ExpAscFileName = 'DL766600.txt' WHERE ExpFormatCode = 'IPRDNT401K';

Execute Export
--------------
EXEC dbo.dsi_sp_TestSwitchbox_v2 'IPRDNT401K', 'IMPORT';

EXEC dbo._dsi_usp_ExportRipOut @FormatCode = 'IPRDNT401K', @AllObjects = 'Y'
**********************************************************************************/
BEGIN

    /***********************
        DECLARE VARIABLES
    ************************/
    DECLARE    @srcPath VARCHAR(200),
               @ImportPath VARCHAR(100),
               @FileName VARCHAR(100),
               @BulkIns VARCHAR(500),
               @dbName VARCHAR(25),
               @ExportCode VARCHAR(12),
               @FormatCode VARCHAR(10),
               @FileCreationDate VARCHAR(50);

    SET @FormatCode = 'IPRDNT401K'
    SET @dbName = RTRIM(DB_NAME());
    SET @ExportCode = (SELECT ExportCode FROM dbo.U_dsi_Parameters (NOLOCK) WHERE FormatCode = @FormatCode);

    --Set directory and filename where import file is located
    SET @ImportPath = dbo.Dsi_fnVariable(@FormatCode,'ImportPath');
    SET @FileName = (SELECT expAscFileName FROM dbo.AscExp WHERE expFormatCode = @FormatCode AND expExportCode = @ExportCode);

    -- Remove FilePath from @FileName, If Exists
    IF (CHARINDEX('\',REVERSE(@FileName)) > 0)
        SET @FileName = REVERSE(LEFT(REVERSE(@FileName),CHARINDEX('\',REVERSE(@FileName))-1));

    --==================================================
    -- SET FILENAME
    --==================================================
    UPDATE dbo.U_dsi_Parameters
        SET ExportFile = 'Prudential 401k Deferral and Loan Import_REVIEW_'
                            + CONVERT(CHAR(8),GETDATE(),112)                             -- YYMMDD
                            + REPLACE(CONVERT(VARCHAR(8),GETDATE(),108),':',SPACE(0))    -- HHMMss
                            + '.csv'
    WHERE FormatCode = @FormatCode;

    --==================================================
    -- Create Driver Table for Error Report
    --==================================================
    IF object_id('U_IPRDNT401K_drvTbl','U') IS NOT NULL
        DROP TABLE dbo.U_IPRDNT401K_drvTbl;
    CREATE TABLE dbo.U_IPRDNT401K_drvTbl (
        drvSurrogateKey VARCHAR(50) NULL
        ,drvEmployeeNumber VARCHAR(50) NULL
        ,drvEmployeeName VARCHAR(50) NULL
        ,drvSSN VARCHAR(50) NULL
        ,drvDeductionCode VARCHAR(50) NULL
        ,drvBenefitStatus VARCHAR(50) NULL
        ,drvBenefitStatusDate VARCHAR(50) NULL
        ,drvBenefitStartDate VARCHAR(50) NULL
        ,drvBenefitStopDate VARCHAR(50) NULL
        ,drvDeductionStartDate VARCHAR(50) NULL
        ,drvDeductionStopDate VARCHAR(50) NULL
        ,drvContributionPercent VARCHAR(50) NULL
        ,drvContributionAmount VARCHAR(50) NULL
        ,drvEmployerPercent VARCHAR(50) NULL
        ,drvEmployerAmount VARCHAR(50) NULL
        ,drvBenefitOption VARCHAR(50) NULL
        ,drvBenefitAmount VARCHAR(50) NULL
        ,drvBenefitChangeReason VARCHAR(50) NULL
        ,drvLoanNumber VARCHAR(50) NULL
        ,drvLoanPaymentAmount VARCHAR(50) NULL
        ,drvLoanGoalAmount VARCHAR(50) NULL
        ,drvLoanType VARCHAR(50) NULL
        ,drvAction VARCHAR(50) NULL
        ,drvError VARCHAR(250) NULL
        ,drvImported TINYINT DEFAULT 0 NOT NULL
        ,drvEEID VARCHAR(12) NULL
        ,drvCOID VARCHAR(5) NULL
        ,drvDedCode VARCHAR(50) NULL
        ,drvImportType VARCHAR(50) NULL
        ,drvPeriodStartDate VARCHAR(50) NULL
        ,drvPendingUpdateID VARCHAR(20) NULL
        ,drvInitialSort VARCHAR(50) NULL
    );

    /********************************************
        FILE VALIDATION - CHECK IF FILES EXIST
    ********************************************/

    --=======================
    -- CHECK IF FILE EXISTS
    --=======================
    DECLARE @Output INT, @ExistsCmd VARCHAR(200), @CountFile INT;
    SET @CountFile = 0;

    --------------------------------
    -- Check if Import File Exists
    --------------------------------
    SET @ExistsCmd = 'DIR /B /A-D "' + ISNULL(@ImportPath,'') + ISNULL(@FileName,'') + '"';

    PRINT @ExistsCmd;
    EXEC @output = master.dbo.XP_CMDSHELL @ExistsCmd, NO_OUTPUT;

    -- If @Output = 0, Then File Exists and update File Count
    IF @Output = 0
        SET @CountFile = @CountFile + 1;

    ---------------------------------------------------------------------
    -- If NO Files Exists, Then Report Error, Else Continue with Import
    --------------------------------------------------------------------
    IF @CountFile = 0
    BEGIN

        -- Report Error: No Files Exists
        INSERT INTO dbo.U_IPRDNT401K_drvTbl (drvError, drvImported)
        SELECT drvError = CASE WHEN ISNULL(@FileName,'') = '' THEN 'Import FileName is blank in Export Screen. Import Cancelled.'
                               ELSE 'Import FileName "' + @FileName + '" Does Not Exist In Import Folder (I:\Imports\Prudential 401k\).  Import Cancelled.'
                          END
            ,drvImported = 2; -- 0 = Initial Load, 1 = Imported/Updated, 2 = Rejected

        -- Stop Processing
        RETURN;

    END

    /*************************************
        Load Raw Data into Import Table
    *************************************/
    BEGIN TRY
        --=============================================
        -- CREATE/TRUNCATE RAW AND IMPORT TABLES
        --=============================================

        -- Create/Truncate Raw Data table
        IF OBJECT_ID('U_IPRDNT401K_Raw','U') IS NOT NULL
            DROP TABLE dbo.U_IPRDNT401K_Raw;
        CREATE TABLE dbo.U_IPRDNT401K_Raw (Data VARCHAR(8000));

        --===========================================
        -- Load File into RAW Table via BULK INSERT
        --===========================================

        -- Set Source Path for Bulk Insert    
        SET @srcPath = @ImportPath + @FileName;

        -- TRUNCATE RAW TABLE
        TRUNCATE TABLE dbo.u_IPRDNT401K_Raw;

        --BULK INSERT INTO RAW DATA TABLE
        -- NOTE: Set FIRSTROW = 2, If Header Exists In Import File (Header Row is Skipped)
        -- Row Terminator is Line Feed (LF) = ROWTERMINATOR = ''0x0a''
        SELECT @BulkIns = 'BULK INSERT '+ @dbName + '.dbo.U_IPRDNT401K_Raw
                           FROM ''' + @srcPath + '''
                           WITH
                           (
                                ROWTERMINATOR = ''0x0a''
                            )';
        EXEC  (@BulkIns);
    END TRY
    BEGIN CATCH
       -- Report SQL Error in Error Report File
       INSERT INTO dbo.U_IPRDNT401K_drvTbl (drvError)
       SELECT 'Error Importing File: ' + ISNULL(ERROR_MESSAGE(),'');

       -- Stop Processing
       RETURN;
    END CATCH;

    -- Get File Creation Date from header record
    SELECT @FileCreationDate = SUBSTRING(Data,12,8)
    FROM dbo.U_IPRDNT401K_Raw WITH (NOLOCK)
    WHERE SUBSTRING(Data,1,1) = '1'; -- Record Type = '1' (Header)

    -- Remove header and trailer
    DELETE FROM dbo.U_IPRDNT401K_Raw
    WHERE SUBSTRING(Data,1,1) NOT IN ('2','3');

    -- select * from dbo.U_IPRDNT401K_Raw

    --==================================
    -- Load RAW Data into Import Table
    --==================================
    BEGIN TRY
        ------------------------------------------------
        -- Load Import Table for 401K/Roth Deferrals
        ------------------------------------------------
        IF object_id('U_IPRDNT401K_Import','U') IS NOT NULL
            DROP TABLE dbo.U_IPRDNT401K_Import;
        SELECT DISTINCT EEID = CONVERT(VARCHAR(12),NULL)
            , COID = CONVERT(VARCHAR(5), NULL)
            , ImportType = CONVERT(VARCHAR(50), 'DEFERRAL')
            , Field1 = CONVERT(VARCHAR(50),SUBSTRING(Data,1,1))
            , Field2 = CONVERT(VARCHAR(50),SUBSTRING(Data,2,6))
            , Field3 = CONVERT(VARCHAR(50),SUBSTRING(Data,8,6))
            , Field4 = CONVERT(VARCHAR(50),SUBSTRING(Data,14,9))  -- SSN
            , Field5 = CONVERT(VARCHAR(50),SUBSTRING(Data,23,1))  -- Source code
            , Field6 = CONVERT(VARCHAR(50),SUBSTRING(Data,24,9))  -- percentage rate
            , Field7 = CONVERT(VARCHAR(50),SUBSTRING(Data,35,30)) 
            , Field8 = CONVERT(VARCHAR(50),SUBSTRING(Data,65,1))  -- determines add/change
            , Field9 = CONVERT(VARCHAR(50),SUBSTRING(Data,66,1))
            , Field10 = CONVERT(VARCHAR(50),SUBSTRING(Data,67,13))
            , Field11 = CONVERT(VARCHAR(50),SUBSTRING(Data,80,1))
      , Field12 = CONVERT(VARCHAR(50),NULL)
        INTO dbo.U_IPRDNT401K_Import
        FROM dbo.U_IPRDNT401K_Raw (NOLOCK)
        WHERE SUBSTRING(Data,1,1) = '2'; -- Record Type = '2' (Deferral)
    END TRY
    BEGIN CATCH
       -- Report SQL Error in Error Report File
       INSERT INTO dbo.U_IPRDNT401K_drvTbl (drvError)
       SELECT 'Error Processing Deferral File: ' + ISNULL(ERROR_MESSAGE(),'');

       -- Stop Processing
       RETURN;
    END CATCH;

    -- select * from dbo.U_IPRDNT401K_Import WHERE ImportType = 'DEFERRAL' order by EEID

        ---------------------------------
        -- Load Import Table for Loans
        ---------------------------------
        INSERT INTO dbo.U_IPRDNT401K_Import (EEID, COID, ImportType, Field1, Field2, Field3, Field4, Field5, Field6, Field7, Field8, Field9, Field10
            ,Field11, Field12)
        SELECT DISTINCT EEID = NULL
            , COID = NULL
            , ImportType = 'LOAN'
            , Field1 = SUBSTRING(Data,1,1)
            , Field2 = SUBSTRING(Data,2,9)
            , Field3 = SUBSTRING(Data,11,6)
            , Field4 = SUBSTRING(Data,17,6)
            , Field5 = SUBSTRING(Data,23,3)
            , Field6 = SUBSTRING(Data,26,1)
            , Field7 = SUBSTRING(Data,27,11)
            , Field8 = SUBSTRING(Data,38,11)
            , Field9 = SUBSTRING(Data,49,8)
            , Field10 = SUBSTRING(Data,57,30)
            , Field11 = SUBSTRING(Data,87,13)
            , Field12 = SUBSTRING(Data,100,11)
        FROM dbo.U_IPRDNT401K_Raw (NOLOCK)
        WHERE SUBSTRING(Data,1,1) = '3'; -- Record Type = '3' (Loan)

        --============================================
        -- Update EEID/COID Based On Field# 4 (401k and ROTH)
        --============================================
        UPDATE dbo.U_IPRDNT401K_Import
            SET EEID = eepEEID
                ,COID = ISNULL(eepHomeCoID,dbo.dsi_BDM_fn_GetCurrentCoID(eepEEID))
        FROM dbo.U_IPRDNT401K_Import
        JOIN dbo.EmpPers (NOLOCK)
            ON eepSSN = dbo.dsi_fnPadZero(REPLACE(Field4,'-',SPACE(0)),9,0)
        WHERE ISNUMERIC(REPLACE(Field4,'-',SPACE(0))) = 1
        AND Field1 = '2';

        --===================================================
        -- Update EEID/COID Based On Field# 2 (loans)
        --==================================================
        UPDATE dbo.U_IPRDNT401K_Import
      SET EEID = eepEEID
        ,COID = ISNULL(eepHomeCoID,dbo.dsi_BDM_fn_GetCurrentCoID(eepEEID))
    FROM dbo.U_IPRDNT401K_Import
    JOIN dbo.EmpPers (NOLOCK)
      ON eepSSN = dbo.dsi_fnPadZero(REPLACE(Field2,'-',SPACE(0)),9,0)
    WHERE ISNUMERIC(REPLACE(Field2,'-',SPACE(0))) = 1
    AND Field1 = '3';

    /***************************************
        Build Driver Table - Deferrals
    ****************************************/
    BEGIN TRY
        --===================================================
        -- Load Deferral (401K / Roth) Information
        --===================================================
        INSERT INTO dbo.U_IPRDNT401K_drvTbl (drvSurrogateKey,drvEmployeeNumber,drvEmployeeName,drvSSN,drvDeductionCode,drvBenefitStatus,drvBenefitStatusDate
            ,drvBenefitStartDate,drvBenefitStopDate,drvDeductionStartDate,drvDeductionStopDate,drvContributionPercent,drvContributionAmount,drvEmployerPercent
            ,drvEmployerAmount,drvBenefitOption,drvBenefitAmount,drvBenefitChangeReason,drvLoanNumber,drvLoanPaymentAmount,drvLoanGoalAmount,drvLoanType,drvAction
            ,drvError,drvImported,drvEEID,drvCOID,drvDedCode,drvImportType,drvPeriodStartDate,drvInitialSort)
        SELECT DISTINCT
            drvSurrogateKey = CONVERT(VARCHAR(50),RTRIM(EEID) + RTRIM(COID))
            ,drvEmployeeNumber = CONVERT(VARCHAR(50),NULL) --Update below
            ,drvEmployeeName = CONVERT(VARCHAR(50),RTRIM(EepNameFirst) + SPACE(1) + RTRIM(EepNameLast))
            ,drvSSN = CONVERT(VARCHAR(50),Field4)
            ,drvDeductionCode = CONVERT(VARCHAR(50),
                                CASE
                                    WHEN Field5 = 'A' THEN
                                        CASE
                                            WHEN Field8 IN ('A','D','') THEN EedDedCode
                                            WHEN Field8 = 'C' AND CmpCompanyName <> 'University of Phoenix Puerto Rico' THEN '401K'
                                            WHEN Field8 = 'C' AND CmpCompanyName = 'University of Phoenix Puerto Rico' THEN '401KP'
                                            WHEN Field8 = 'F' AND CmpCompanyName <> 'University of Phoenix Puerto Rico' THEN '401CU'
                                            WHEN Field8 = 'F' AND CmpCompanyName = 'University of Phoenix Puerto Rico' THEN '401CP'
                                        END
                                    WHEN Field5 = 'J' THEN
                                        CASE
                                            WHEN Field8 IN ('C','A') THEN 'ROTH'
                                            WHEN Field8 IN ('F','D') THEN 'ROTHC'
                                        END
                                END)
            ,drvBenefitStatus = CONVERT(VARCHAR(50),CASE
                                                WHEN Field5 = '*' THEN 'T'
                                                ELSE 'A'
                                              END)
            ,drvBenefitStatusDate = CONVERT(VARCHAR(50), @FileCreationDate)
            ,drvBenefitStartDate = CONVERT(VARCHAR(50), @FileCreationDate)
            ,drvBenefitStopDate = CONVERT(VARCHAR(50), @FileCreationDate)
            ,drvDeductionStartDate = CONVERT(VARCHAR(50), @FileCreationDate)
            ,drvDeductionStopDate = CONVERT(VARCHAR(50), @FileCreationDate)
            ,drvContributionPercent = CONVERT(VARCHAR(50),CONVERT(MONEY,Field6)/100)
            ,drvContributionAmount = CONVERT(VARCHAR(50),NULL) -- Not used for this import
            ,drvEmployerPercent = CONVERT(VARCHAR(50),NULL) -- Not used for this import
            ,drvEmployerAmount = CONVERT(VARCHAR(50),NULL) -- Not used for this import
            ,drvBenefitOption = CONVERT(VARCHAR(50),NULL) -- Not used for this import
            ,drvBenefitAmount = CONVERT(VARCHAR(50),CONVERT(MONEY,0.00)) -- Not used for this import
            ,drvBenefitChangeReason = CONVERT(VARCHAR(50),CASE
                                                      WHEN Field8 IN ('C','F') THEN '400'
                                                      WHEN Field8 = '' THEN '402'
                                                      ELSE '401'
                                                    END)
            ,drvLoanNumber = CONVERT(VARCHAR(50),NULL) -- Not used for deferrals
            ,drvLoanPaymentAmount = CONVERT(VARCHAR(50),NULL) -- Not used for deferrals
            ,drvLoanGoalAmount = CONVERT(VARCHAR(50),NULL) -- Not used for deferrals
            ,drvLoanType = CONVERT(VARCHAR(50),NULL) -- Not used for deferrals
            ,drvAction = CONVERT(VARCHAR(50),
                         CASE WHEN NULLIF(Field4,'') IS NULL THEN 'REJECTED' --Missing [SSN] Value in File
                              WHEN EEID IS NULL THEN 'REJECTED' --Unable to Match Employee in UltiPro based on [SSN] Value in File
                              WHEN EecEmplStatus = 'T' THEN 'REJECTED' --Terminated Employee
                              WHEN (NULLIF(Field8,'') IS NULL -- Benefit is being stopped
                                    OR CONVERT(MONEY,Field6) = 0.00 -- Contribution Percent = 0.00
                                ) THEN
                                      CASE WHEN EedDedCode = '401ER' THEN 'REJECTED'
                                           WHEN EedDedCode IS NOT NULL THEN 'STOP'
                                           ELSE 'REJECTED' -- No Deduction/Benefit Plan to STOP
                                      END
                              WHEN EedDedCode IS NOT NULL THEN
                                  CASE WHEN COALESCE(EedBenStopDate,EedStopDate) IS NOT NULL THEN 'RESTART'
                                       ELSE 'CHANGE'
                                  END
                              ELSE 'ADD'
                         END)
            ,drvError = CONVERT(VARCHAR(250),
                        CASE WHEN NULLIF(Field4,'') IS NULL THEN 'Record Rejected: Missing [SSN] Value ' + Field4 + ' in File.'
                             WHEN EEID IS NULL THEN 'Record Rejected: Unable to Match Employee in UltiPro based on [SSN] Value ' + Field4 + ' in File.'
                             WHEN EecEmplStatus = 'T' THEN 'Record Rejected: Employee is Terminated in UltiPro - Do Not Process.'
                             WHEN EedDedCode IS NULL AND (NULLIF(Field8,'') IS NULL OR CONVERT(MONEY,Field6) = 0.00) THEN 'Record Rejected: Cannot Process "STOP" Transaction - Deduction/Benefit Plan Does Not Exist for Employee in UltiPro.'
                             WHEN EedDedCode = '401ER' AND (NULLIF(Field8,'') IS NULL OR CONVERT(MONEY,Field6) = 0.00) THEN 'Record Ignored: Will not process "STOP" for ER Match.'
                        END)
            ,drvImported = CASE -- 0 = Initial Load, 1 = Imported/Updated, 2 = Rejected
                                WHEN NULLIF(Field4,'') IS NULL THEN 2 --Missing [SSN] Value in File
                                WHEN EEID IS NULL THEN 2 --Unable to Match Employee in UltiPro based on [SSN] Value in File
                                WHEN EecEmplStatus = 'T' THEN 2 --Terminated Employee
                                WHEN EedDedCode IS NULL AND (NULLIF(Field8,'') IS NULL OR CONVERT(MONEY,Field10) = 0.00) THEN 2 -- No Deduction/Benefit Plan to STOP
                                WHEN EedDedCode = '401ER' AND (NULLIF(Field8,'') IS NULL OR CONVERT(MONEY,Field10) = 0.00) THEN 2 -- Ignore stops for 401ER
                                ELSE 0
                           END
            ,drvEEID = EEID
            ,drvCOID = COID
            ,drvDedCode = CONVERT(VARCHAR(50),
                                CASE
                                    WHEN Field5 = 'A' THEN
                                        CASE
                                            WHEN Field8 IN ('A','D','') THEN EedDedCode
                                            WHEN Field8 = 'C' AND CmpCompanyName <> 'University of Phoenix Puerto Rico' THEN '401K'
                                            WHEN Field8 = 'C' AND CmpCompanyName = 'University of Phoenix Puerto Rico' THEN '401KP'
                                            WHEN Field8 = 'F' AND CmpCompanyName <> 'University of Phoenix Puerto Rico' THEN '401CU'
                                            WHEN Field8 = 'F' AND CmpCompanyName = 'University of Phoenix Puerto Rico' THEN '401CP'
                                        END
                                    WHEN Field5 = 'J' THEN
                                        CASE
                                            WHEN Field8 IN ('C','A') THEN 'ROTH'
                                            WHEN Field8 IN ('F','D') THEN 'ROTHC'
                                        END
                                END)
            ,drvImportType = CONVERT(VARCHAR(50),ImportType)
            ,drvPeriodStartDate = CONVERT(VARCHAR(50),CONVERT(CHAR(10),PgpPeriodStartDate,101))
            ,drvInitialSort = CONVERT(VARCHAR(50), Field4)
        FROM dbo.U_IPRDNT401K_Import
        LEFT JOIN dbo.EmpComp WITH (NOLOCK)
            ON EecEEID = EEID
            AND EecCoID = COID
        LEFT JOIN dbo.EmpPers WITH (NOLOCK)
            ON eepEEID = EEID
        LEFT JOIN dbo.Company WITH (NOLOCK)
            ON CmpCoID = COID
        LEFT JOIN dbo.EmpDed WITH (NOLOCK)
            ON EedEEID = EEID
            AND EedCoID = COID            
            AND (  (    EedDedCode = '401K'  AND Field5 = 'A' AND Field8 = 'A' AND CmpCompanyName <> 'University of Phoenix Puerto Rico')
                    OR (EedDedCode = '401KP' AND Field5 = 'A' AND Field8 = 'A' AND CmpCompanyName = 'University of Phoenix Puerto Rico')
                    OR (EedDedCode = '401CU' AND Field5 = 'A' AND Field8 = 'D' AND CmpCompanyName <> 'University of Phoenix Puerto Rico')
                    OR (EedDedCode = '401CP' AND Field5 = 'A' AND Field8 = 'D' AND CmpCompanyName = 'University of Phoenix Puerto Rico')
                    OR (EedDedCode IN ('401ER','401K','401KP','401CU','401CP') AND Field5 = 'A' AND Field8 = ''  )
                    OR (EedDedCode = 'ROTH' AND  Field5 = 'J' AND Field8 IN ('A','C') )
                    OR (EedDedCode = 'ROTHC' AND Field5 = 'J' AND Field8 IN ('D','F') )
                    OR (EedDedCode IN ('ROTH','ROTHC') AND Field5 = 'J' AND Field8 = '' )
                    )            
        LEFT JOIN dbo.PgPayPer WITH (NOLOCK)
            ON PgpPayGroup = EecPayGroup
            AND PgpPeriodType = 'R'
            AND CONVERT(CHAR(10),GETDATE(),101) BETWEEN PgpPeriodStartDate AND PgpPeriodEndDate
        WHERE ImportType = 'DEFERRAL';
    END TRY
    BEGIN CATCH
       -- Report SQL Error in Error Report File
       INSERT INTO dbo.U_IPRDNT401K_drvTbl (drvError)
       SELECT 'Error Processing Deferral File: ' + ISNULL(ERROR_MESSAGE(),'');

       -- Stop Processing
       RETURN;
    END CATCH;

    -- SELECT * FROM dbo.U_IPRDNT401K_drvTbl ORDER BY drvEEID

    /***************************************
        Build Driver Table - Loans
    ****************************************/
    BEGIN TRY
        --===================================================
        -- Load 401K Loan Information
        --===================================================
        INSERT INTO dbo.U_IPRDNT401K_drvTbl(drvSurrogateKey,drvEmployeeNumber,drvEmployeeName,drvSSN,drvDeductionCode,drvDeductionStartDate,drvDeductionStopDate,drvBenefitChangeReason
            ,drvLoanNumber,drvLoanPaymentAmount,drvLoanGoalAmount,drvLoanType,drvAction,drvError,drvImported,drvEEID,drvCOID,drvDedCode,drvImportType,drvPeriodStartDate,drvInitialSort)
        SELECT DISTINCT
            drvSurrogateKey = CONVERT(VARCHAR(50),RTRIM(EEID) + RTRIM(COID))
            ,drvEmployeeNumber = CONVERT(VARCHAR(50),NULL) --Update below
            ,drvEmployeeName = CONVERT(VARCHAR(50),RTRIM(EepNameFirst) + SPACE(1) + RTRIM(EepNameLast))
            ,drvSSN = CONVERT(VARCHAR(50),Field2)
            ,drvDeductionCode = CONVERT(VARCHAR(50),'401KL')
            ,drvDeductionStartDate = CONVERT(VARCHAR(50),CASE
                                                    WHEN Field6 = '1' THEN Field9
                                                   END)
            ,drvDeductionStopDate = CONVERT(VARCHAR(50),CASE
                                                    WHEN Field6 IN ('1','5') THEN NULL
                                                    WHEN Field6 = '9' THEN @FileCreationDate
                                                  END)
            ,drvBenefitChangeReason = CONVERT(VARCHAR(50),CASE Field6
                                                      WHEN '1' THEN '400'
                                                      WHEN '9' THEN '401'
                                                      WHEN '5' THEN '402'
                                                    END)
            ,drvLoanNumber = CONVERT(VARCHAR(50),NULL) -- Not used for this import
            ,drvLoanPaymentAmount = CONVERT(VARCHAR(50),CASE
                                                    WHEN Field6 = '9' THEN 0.00
                                                    ELSE dbo.dsi_fnImportOPunch(Field8,'11','2')
                                                  END)
            ,drvLoanGoalAmount = CONVERT(VARCHAR(50),CASE Field6
                                                              WHEN '1' THEN dbo.dsi_fnImportOPunch(Field12,'11','2')
                                                              WHEN '5' THEN dbo.dsi_fnImportOPunch(Field12,'11','2')
                                                              WHEN '9' THEN 0.00
                                                             END)
            ,drvLoanType = CONVERT(VARCHAR(50),NULL) -- Not used for this import
            ,drvAction = CONVERT(VARCHAR(50),
                         CASE WHEN NULLIF(Field2,'') IS NULL THEN 'REJECTED' --Missing [SSN] Value in File.
                              WHEN EEID IS NULL THEN 'REJECTED' --Unable to Match Employee in UltiPro based on [SSN] Value in File
                              WHEN EecEmplStatus = 'T' THEN 'REJECTED' --Terminated Employee
                              WHEN Field6 = '9' THEN --9 = Stop Existing Loan
                                CASE WHEN EedDedCode IS NOT NULL THEN 'STOP'
                                     ELSE 'REJECTED' -- No Deduction/Benefit Plan to STOP
                                END
                              WHEN EedDedCode IS NOT NULL THEN
                                CASE WHEN COALESCE(EedBenStopDate,EedStopDate) IS NOT NULL THEN 'RESTART'
                                     ELSE 'CHANGE'
                                END
                              ELSE 'ADD'
                         END)
            ,drvError = CONVERT(VARCHAR(250),
                        CASE WHEN NULLIF(Field2,'') IS NULL THEN 'Record Rejected: Missing [SSN] Value ' + Field4 + ' in File.'
                             WHEN EEID IS NULL THEN 'Record Rejected: Unable to Match Employee in UltiPro based on [SSN] Value ' + Field4 + ' in File.'
                             WHEN EecEmplStatus = 'T' THEN 'Record Rejected: Employee is Terminated in UltiPro - Do Not Process.'
                             WHEN EedDedCode IS NULL AND Field6 = '9' THEN 'Record Rejected: Cannot Process "STOP" Transaction - Deduction/Benefit Plan Does Not Exist for Employee in UltiPro.'
                        END)
            ,drvImported = CASE -- 0 = Initial Load, 1 = Imported/Updated, 2 = Rejected
                                WHEN NULLIF(Field2,'') IS NULL THEN 2 --Missing [SSN] Value in File.
                                WHEN EEID IS NULL THEN 2 --Unable to Match Employee in UltiPro based on [SSN] Value in File
                                WHEN EecEmplStatus = 'T' THEN 2 --Terminated Employee
                                WHEN EedDedCode IS NULL AND Field6 = '9' THEN 2 -- No Deduction/Benefit Plan to STOP
                                ELSE 0
                           END
            ,drvEEID = EEID
            ,drvCOID = COID
            ,drvDedCode = CONVERT(VARCHAR(50),'401KL')
            ,drvImportType = CONVERT(VARCHAR(50),ImportType)
            ,drvPeriodStartDate = CONVERT(VARCHAR(50),CONVERT(CHAR(10),PgpPeriodStartDate,101))
            ,drvInitialSort = CONVERT(VARCHAR(50), Field2)
        FROM dbo.U_IPRDNT401K_Import
        LEFT JOIN dbo.EmpComp WITH (NOLOCK)
            ON EecEEID = EEID
            AND EecCoID = COID
        LEFT JOIN dbo.EmpPers WITH (NOLOCK)
            ON eepEEID = EEID
        LEFT JOIN dbo.EmpDed WITH (NOLOCK)
            ON EedEEID = EEID
            AND EedCoID = COID
            AND EedDedCode = '401KL'
        LEFT JOIN dbo.PgPayPer WITH (NOLOCK)
            ON PgpPayGroup = EecPayGroup
            AND PgpPeriodType = 'R'
            AND CONVERT(CHAR(10),GETDATE(),101) BETWEEN PgpPeriodStartDate AND PgpPeriodEndDate
        WHERE ImportType = 'LOAN';
    END TRY
    BEGIN CATCH
       -- Report SQL Error in Error Report File
       INSERT INTO dbo.U_IPRDNT401K_drvTbl (drvError)
       SELECT 'Error Processing Deferral File: ' + ISNULL(ERROR_MESSAGE(),'');

       -- Stop Processing
       RETURN;
    END CATCH;

    -- Add EmpNo based on EEID and COID
    UPDATE dbo.U_IPRDNT401K_drvTbl
    SET drvEmployeeNumber = EecEmpNo
    FROM dbo.U_IPRDNT401K_drvTbl
    JOIN dbo.EmpComp WITH (NOLOCK)
      ON EecEEID = drvEEID
     AND EecCoID = drvCOID;

    --------------------------------------
    -- Update SurrogateKey With DedCode
    --------------------------------------
    UPDATE dbo.U_IPRDNT401K_drvTbl SET drvSurrogateKey  = drvSurrogateKey + drvDedCode;

    /**************************************************
        Update PendingUpdateID for Valid Records
    **************************************************/
    UPDATE dbo.U_IPRDNT401K_drvTbl
        SET drvPendingUpdateID = LEFT(@FormatCode + dbo.fn_GetTimedKey(),20)
    WHERE drvImported = 0;

    /**************************
        POPULATE LOD TABLES
    **************************/
    BEGIN TRY
        --=========================================
        -- Populate Lod Control Table (LodCntrl)
        --=========================================
        INSERT INTO dbo.LodCntrl (CntCoID,CntEEID,CntPendingEffDate,CntPendingImportType,CntPendingSource,CntPendingStatus,CntPendingUpdateID,CntSessionID)
        SELECT
            CntCoID = drvCOID
            ,CntEEID = drvEEID
            ,CntPendingEffDate = CONVERT(CHAR(10),GETDATE(),101)
            ,CntPendingImportType = 'P'
            ,CntPendingSource = 'C'
            ,CntPendingStatus = 'A'
            ,CntPendingUpdateID = drvPendingUpdateID
            ,CntSessionID = 'IPRDNT401K'
        FROM dbo.U_IPRDNT401K_drvTbl WITH (NOLOCK)
        WHERE drvImported = 0;

        --==============================================
        -- Populate Lod Employee Comp Table (LodEComp)
        --==============================================
        INSERT INTO dbo.LodEComp (EecEEID,EecCOID,EecEmpNo,EecCompanyCode,EecPendingEffDate,EecPendingTransType,EecPendingUpdateID,EecSessionID)
        SELECT
            EecEEID = drvEEID
            ,EecCOID = drvCOID
            ,EecEmpNo = EecEmpNo
            ,EecCompanyCode = CmpCompanyCode
            ,EecPendingEffDate = CONVERT(CHAR(10),GETDATE(),101)
            ,EecPendingTransType = 'U'
            ,EecPendingUpdateID = drvPendingUpdateID
            ,EecSessionID = 'IPRDNT401K'
        FROM dbo.U_IPRDNT401K_drvTbl WITH (NOLOCK)
        JOIN dbo.EmpComp WITH (NOLOCK)
            ON EecEEID = drvEEID
            AND EecCOID = drvCOID
        JOIN dbo.Company WITH (NOLOCK)
            ON CmpCOID = drvCOID
        WHERE drvImported = 0;

        --============================================================================================
        -- Populate Lod Deduction Table (LodEDed) for 401K/ROTH Regular and Catch-Up Deferral File
        --============================================================================================
        INSERT INTO dbo.LodEDed (EedEEID,EedCOID,EedDedCode,EedEECalcRateOrPct,EedEEAmt,EedBenStartDate,EedStartDate,EedBenStatusDate,EedBenStopDate,EedStopDate
            ,EedBenStatus,EedBenOption,EedChangeReason,EedPendingTransType,EedPendingEffDate,EedInclInAddlChk,EedInclInManlChk,EedPendingUpdateID) --EedEECalcRule
        SELECT EedEEID = drvEEID
            ,EedCOID = drvCOID
            ,EedDedCode = drvDedCode
            ,EedEECalcRateOrPct = CASE -- Only Populate for Employee (EE) Non-Flat Amount Calc Rule ('20')
                                       WHEN DedEECalcRule <> '20' AND NULLIF(drvContributionPercent,'') IS NOT NULL THEN
                                            CASE WHEN drvAction = 'STOP' THEN CONVERT(MONEY,0.00)
                                                 ELSE CONVERT(MONEY,drvContributionPercent)
                                            END
                                  END
            ,EedEEAmt = CASE -- Only Populate for Employee (EE) Flat Amount Calc Rule ('20')
                             WHEN DedEECalcRule = '20' AND NULLIF(drvContributionAmount,'') IS NOT NULL THEN
                                CASE
                                    WHEN drvAction = 'STOP' THEN CONVERT(MONEY,0.00)
                                    ELSE CONVERT(MONEY,drvContributionAmount)
                                END
                             ELSE CONVERT(MONEY,0.00)
                        END
            ,EedBenStartDate = CASE WHEN ISNULL(DedIsBenefit,'N') = 'N' THEN NULL
                                    WHEN ISNULL(EedBenStartDate,'') = '' THEN COALESCE(drvBenefitStartDate,drvPeriodStartDate)
                                    WHEN drvAction IN ('ADD','RESTART') THEN COALESCE(drvBenefitStartDate,drvPeriodStartDate)
                                    ELSE '12/30/1899'
                               END
            ,EedStartDate = CASE WHEN ISNULL(EedStartDate,'') = '' THEN COALESCE(drvBenefitStartDate,drvPeriodStartDate)
                                 WHEN drvAction IN ('ADD','RESTART') THEN COALESCE(drvBenefitStartDate,drvPeriodStartDate)
                                 ELSE '12/30/1899'
                            END
            ,EedBenStatusDate = CASE WHEN ISNULL(DedIsBenefit,'N') = 'N' THEN NULL
                                     WHEN drvAction IN ('ADD','CHANGE','RESTART') THEN COALESCE(drvBenefitStartDate,drvPeriodStartDate)
                                     ELSE '12/30/1899'
                                END
            ,EedBenStopDate = CASE WHEN ISNULL(DedIsBenefit,'N') = 'N' THEN NULL
                                   WHEN drvAction = 'STOP' THEN drvBenefitStopDate
                                   ELSE '01/01/1900'
                              END
            ,EedStopDate = CASE WHEN drvAction = 'STOP' THEN COALESCE(drvBenefitStartDate,CONVERT(DATETIME,drvPeriodStartDate-1))
                                ELSE '01/01/1900'
                           END
            ,EedBenStatus = CASE WHEN ISNULL(DedIsBenefit,'N') = 'N' THEN NULL
                                 ELSE drvBenefitStatus
                            END
            ,EedBenOption = CASE WHEN ISNULL(DedIsBenefit,'N') = 'N' THEN NULL
                                 WHEN DedEECalcRule = '21' THEN drvBenefitOption
                                 WHEN DedDedCode = '401ER' THEN ''
                            END
            ,EedChangeReason = CASE WHEN drvAction = 'ADD' THEN '400'
                                    WHEN drvAction = 'STOP' THEN '401'
                                    ELSE '402'
                               END
            ,EedPendingTransType = CASE WHEN drvAction = 'ADD' THEN 'A'
                                        ELSE 'U'
                                   END
            ,EedPendingEffDate = CONVERT(CHAR(10),GETDATE(),101)
            ,EedInclInAddlChk = DedInclInAddlChk
            ,EedInclInManlChk = DedInclInManlChk
            ,EedPendingUpdateID = drvPendingUpdateID
        FROM dbo.U_IPRDNT401K_drvTbl WITH (NOLOCK)
        JOIN dbo.DedCode WITH (NOLOCK)
            ON DedDedCode = drvDedCode
        LEFT JOIN dbo.EmpDed WITH (NOLOCK)
            ON EedEEID = DrvEEID AND EedCOID = DrvCOID AND EedDedCode = DrvDedCode
        WHERE drvImported = 0 AND drvImportType = 'DEFERRAL';

        
        --========================================================
        -- Populate Lod Deduction Table (LodEDed) for Loan File
        --========================================================
        INSERT INTO dbo.LodEDed (EedEEID,EedCOID,EedDedCode,EedEEMemberOrCaseNo,EedEEAmt,EedEEGoalAmt,EedEEGTDAmt,EedStartDate,EedStopDate
            ,EedChangeReason,EedPendingTransType,EedPendingEffDate,EedInclInAddlChk,EedInclInManlChk,EedPendingUpdateID)
        SELECT EedEEID = drvEEID
            ,EedCOID = drvCOID
            ,EedDedCode = drvDedCode
            ,EedEEMemberOrCaseNo = drvLoanNumber
            ,EedEEAmt = CASE -- Only Populate for Employee (EE) Flat Amount Calc Rule ('20')
                             WHEN DedEECalcRule = '20' THEN
                                CASE
                                    WHEN drvAction = 'STOP' THEN CONVERT(MONEY,0.00)
                                    ELSE CONVERT(MONEY,drvLoanPaymentAmount)
                                END
                             ELSE CONVERT(MONEY,0.00)
                        END
            ,EedEEGoalAmt = CASE -- Populate if Goal Rule <> 'Z' (None)
                                 WHEN DedEEGoalRule <> 'Z' AND NULLIF(drvLoanGoalAmount,'') IS NOT NULL THEN CONVERT(MONEY,drvLoanGoalAmount)
                                 ELSE CONVERT(MONEY,0.00)
                            END
            ,EedEEGTDAmt = CASE -- Populate if Goal Rule <> 'Z' (None)
                                 WHEN DedEEGoalRule <> 'Z' AND drvAction = 'RESTART' THEN CONVERT(MONEY,0.00)
                           END
            ,EedStartDate = CASE WHEN drvAction IN ('ADD','CHANGE','RESTART') THEN drvDeductionStartDate
                                 ELSE '12/30/1899'
                            END
            ,EedStopDate = CASE WHEN drvAction = 'STOP' THEN drvDeductionStopDate
                                ELSE '01/01/1900'
                           END
            ,EedChangeReason = CASE WHEN drvAction = 'ADD' THEN '400'
                                    WHEN drvAction = 'STOP' THEN '401'
                                    WHEN drvAction IN ('CHANGE','RESTART') THEN '402'
                                END
            ,EedPendingTransType = CASE WHEN drvAction = 'ADD' THEN 'A'
                                        ELSE 'U'
                                   END
            ,EedPendingEffDate = CONVERT(CHAR(10),GETDATE(),101)
            ,EedInclInAddlChk = DedInclInAddlChk
            ,EedInclInManlChk = DedInclInManlChk
            ,EedPendingUpdateID = drvPendingUpdateID
        FROM dbo.U_IPRDNT401K_drvTbl WITH (NOLOCK)
        JOIN dbo.DedCode WITH (NOLOCK)
            ON DedDedCode = drvDedCode
        WHERE drvImported = 0 AND drvImportType = 'LOAN';
    END TRY
    BEGIN CATCH
       -- Report SQL Error in Error Report File
       INSERT INTO dbo.U_IPRDNT401K_drvTbl (drvError)
       SELECT 'Error Loading Record for Validation/Posting: ' + ISNULL(ERROR_MESSAGE(),'');

       -- Stop Processing
       RETURN;
    END CATCH;

    -----------------------------
    -- Report Successful Update
    -----------------------------
    UPDATE dbo.u_IPRDNT401K_drvTbl
        SET drvError = 'Loaded Successfully'
            ,drvImported = 1
    WHERE drvImported = 0
    AND EXISTS (SELECT 1 FROM dbo.LodEDed WHERE EedPendingUpdateID = drvPendingUpdateID);

    /*******************************
        Reject Remaining Records
    *******************************/
    UPDATE dbo.u_IPRDNT401K_drvTbl
        SET drvError = 'Record Rejected'
            ,drvAction = 'REJECTED'
            ,drvImported = 2
    WHERE drvImported = 0;

END
/*

--Create the View
CREATE VIEW dbo.dsi_vwIPRDNT401K_Export AS
    SELECT TOP 20000000 Data FROM dbo.U_IPRDNT401K_File (NOLOCK)
    ORDER BY RIGHT(RecordSet,2), InitialSort, SubSort;

--Check out AscDefF
SELECT * FROM dbo.AscDefF
WHERE AdfHeaderSystemID LIKE 'IPRDNT401K%'
ORDER BY AdfSetNumber, AdfFieldNumber;

--Update Dates
UPDATE dbo.AscExp
    SET ExpLastStartPerControl = '201701011'
       ,ExpStartPerControl     = '201701011'
       ,ExpLastEndPerControl   = '201701019'
       ,ExpEndPerControl       = '201701019'
WHERE ExpFormatCode = 'IPRDNT401K';

*/
GO
CREATE VIEW dbo.dsi_vwIPRDNT401K_Export AS
    SELECT TOP 20000000 Data FROM dbo.U_IPRDNT401K_File (NOLOCK)
    ORDER BY RIGHT(RecordSet,2), InitialSort, SubSort

GO


-----------
-- This is a web export; insert a record into the CustomTemplates table to make it visible
-----------

INSERT INTO dbo.CustomTemplates (Engine, EngineCode)
SELECT Engine = AdhEngine, EngineCode = AdhFormatCode
  FROM dbo.AscDefH WITH (NOLOCK)
 WHERE AdhFormatCode = 'IPRDNT401K' AND AdhEngine = 'EMPEXPORT'
   AND NOT EXISTS (SELECT 1 FROM dbo.CustomTemplates WHERE EngineCode = AdhFormatCode AND Engine = AdhEngine);


-----------
-- Restore target paths from U_dsi_RipoutParms
-----------

UPDATE dbo.U_dsi_Configuration
   SET CfgValue = rpoParmValue02
  FROM dbo.U_dsi_Configuration
  JOIN dbo.U_dsi_RipoutParms WITH (NOLOCK) ON rpoFormatCode = FormatCode AND rpoParmValue01 = CfgName
 WHERE rpoFormatCode = 'IPRDNT401K'
   AND rpoParmType = 'Path'


-----------
-- Restore expSystemIDs from U_dsi_RipoutParms
-----------

UPDATE dbo.AscExp
   SET expSystemID = rpoParmValue02
  FROM dbo.AscExp
  JOIN dbo.U_dsi_RipoutParms WITH (NOLOCK) ON rpoFormatCode = expFormatCode AND rpoParmValue01 = expExportCode
 WHERE rpoFormatCode = 'IPRDNT401K'
   AND rpoParmType = 'expSystemID'


-----------
-- This is a web export; set paths to NULL
-----------

EXEC dbo.dsi_sp_UpdateConfig 'IPRDNT401K', 'ExportPath', 'V', NULL
EXEC dbo.dsi_sp_UpdateConfig 'IPRDNT401K', 'TestPath', 'V', NULL


-----------
-- This is a web export; set UseFileName = Y
-----------

EXEC dbo.dsi_sp_UpdateConfig 'IPRDNT401K', 'UseFileName', 'V', 'Y'


-- End ripout